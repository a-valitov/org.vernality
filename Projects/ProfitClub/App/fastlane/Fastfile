default_platform(:ios)

before_all do
  sh("rm", "-rf", "org.vernality.profitclub.keystore")
  sh("git", "clone", "git@github.com:vernality/org.vernality.profitclub.keystore.git")
  ENV["GSP_PATH"] = "./fastlane/org.vernality.profitclub.keystore/GoogleService-Info.plist"
  ENV["GOOGLE_APP_ID"] = get_info_plist_value(path: ENV["GSP_PATH"], key: "GOOGLE_APP_ID")
  ENV["FIREBASE_REFRESH_TOKEN"] = get_info_plist_value(path: "./fastlane/org.vernality.profitclub.keystore/CI.plist", key: "FIREBASE_REFRESH_TOKEN")
end

def remove_artifacts
  clean_build_artifacts()
  sh("rm", "-rf", "org.vernality.profitclub.keystore")
  sh("rm", "report.xml")
end

platform :ios do
  desc "Register devices"
  lane :reg do
    register_devices(devices: {
      "Temur 6S" => "58fa3c81bd6bc7f04ef850c2e18ce211b8dede88"
    })
    match(type: "development", force_for_new_devices: true)
    match(type: "adhoc", force_for_new_devices: true)
  end

  desc """
  Upload to Firebase AppDistribution

  fastlane alpha
  """
  lane :alpha do |options|
    increment_build_number()
    match(type: "adhoc", app_identifier: "org.vernality.profitclub", readonly: true)
    build_app(
      scheme: "ProfitClub",
      export_xcargs: "-allowProvisioningUpdates",
      configuration: "Release",
      output_directory: "./Build",
      export_options: {
        method: "ad-hoc",
        provisioningProfiles: {
          "org.vernality.profitclub" => "match AdHoc org.vernality.profitclub"
        }
      }
    )
    firebase_app_distribution(
      app: ENV["GOOGLE_APP_ID"],
      firebase_cli_token: ENV["FIREBASE_REFRESH_TOKEN"],
      release_notes: "Alpha build",
      ipa_path: "./Build/Profit Club.ipa",
      groups: "ios-alpha"
    )
    upload_symbols_to_crashlytics(
      dsym_path: "./Build/Profit Club.app.dSYM.zip",
      gsp_path: ENV["GSP_PATH"]
    )
    skip_docs
  end

  error do |lane, exception|
    remove_artifacts()
  end

end

after_all do
  remove_artifacts()
end
